<?php/*** Amazing System**/if ( !session_id() )	session_start();	class MagicAmazingSystemPlugin {	/**	* Define Class Constants	*/	const default_shortcode_name = 'as';	const option_key = 'amazing_system_shortcode';	/**	* Register used shortcodes	*/	public static function register_shortcodes()	{		$shortcode = get_option(self::option_key, self::default_shortcode_name);		add_shortcode ( $shortcode, 'MagicAmazingSystemPlugin::display_get_post_vars' );	}		/**	* Returns the content of a $_GET or $_POST or $_SESSION variable, referenced via shortcode, e.g. put the	* following in the content of a post or page:	*     [as what="Name" default="default value" force="get/post"]	*	* 	*/	public static function display_get_post_vars( $atts ) {	extract( shortcode_atts( array(		'what' => 'name',		'default' => '',		// 'force' => '', ********** This is for future functionallity to chose POST or GET explicitly	), $atts ) ) ;	/**  Look Ma! This may be how 'force' will work!	if ( $force === 'get' ) {		}	*/	if ( isset( $_POST[$what] )) {		$value = $_POST[$what];	} else if (isset( $_GET[$what])) {		$value = $_GET[$what];	} else if (isset( $_SESSION[$what])) {		$value = $_SESSION[$what];	} else {		$value = $default;	}	return $value;	}		// Used to uniquely identify this plugin's menu page in the WP manager	const admin_menu_slug = 'amazing_system';		/**	* Create admin menue	*/	public static function create_admin_menu()		{			add_menu_page(				'Amazing System',		// page title				'Amazing System',		// menu title				'manage_options',		// capability				self::admin_menu_slug,	// menu slug				'MagicAmazingSystemPlugin::get_admin_page'	// callback			);		}		/**	* Prints the admininstration page for plugin.	*/	public static function get_admin_page()	{		if ( !empty($_POST) && check_admin_referer('amazing_system_options_update','amazing_system_admin_nonce') )		{			update_option( self::option_key, stripslashes( $_POST['shortcode_name'] ) );			$msg = '<div class="updated"><p>Your settings have been <strong>updated</strong></p></div>';		}		$shortcode_name = esc_attr( get_option(self::option_key,self::default_shortcode_name) );		include('admin_page.php');	}		/**	* The inputs here come directly from WordPress:	* @param	array	$links - a hash in the format of name => trnaslation e.g.	* 	array('deactivate' => 'Deactivate') that describes all links available to a plugin.	* @param	string	$file - the path to a plugin's main file (the one with the info header),	*	relative to the plugins directory, e.g. 'amazing-system/index.php'	* @return	array	The $links hash.	*/	public static function add_plugin_settings_link($links, $file) {		if ( $file == 'amazing-system/index.php' ) {			$settings_link = sprintf ( '<a href="%s">%s</a>', admin_url ( 'options-general.php?page='.self::admin_menu_slug ), 'Settings' );			array_unshift ( $links, $settings_link );		}		return $links;	}		}	/*EOF*/